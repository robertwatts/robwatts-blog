---
import type { CollectionEntry } from "astro:content";
import { config } from "../config";
import { getContentType } from "../content/utils";

interface Props {
  feedMode: boolean;
  collectionEntry: CollectionEntry<"blog">;  
}

const { collectionEntry, feedMode = true } = Astro.props;
const contentType = getContentType(collectionEntry);

const showContent = !feedMode || ['note', 'bookmark', 'like', 'repost', 'reply', 'rsvp', 'event', 'checkin'].includes(contentType);
const showSummary = !showContent && collectionEntry.data.summary;

const { Content } = await collectionEntry.render();
---
<article class="h-entry">
  <section class="entry-type">
    <a href={`/posts/${contentType.slug}`} class="p-category">
      <Fragment set:html={contentType.iconSvg} />
      {contentType.name}
    </a>    
  </section>
  {collectionEntry.data.title && (
    <h2 class="p-name">
      {collectionEntry.data.title}
    </h2>
  )}

  {showSummary && (
    <section class="p-summary">
      <p>{collectionEntry.data.summary}</p>
    </section>
  )}

  {showContent && (
    <section class="e-content">
      <Content />
    </section>
  )}
  <section class="post-meta">
    <a class="u-uid u-url" href={`/posts/${collectionEntry.slug}`}>LINK</a>
    by
    <span class="h-card">
      <img class="u-photo" src="/profile.png" alt={config.author+ "' profile image"}" loading="lazy"> 
      <a class="p-name u-url" href={config.url}>{config.author}</a>
    </span>
  </section>
</article>

<style>
  img.u-photo {
    display:none;
  }
  .h-card .u-url::before {
    content: "\f2b9";
    font: normal normal normal 14px/1 FontAwesome;
    margin-right: 3px;
  }
</style>
